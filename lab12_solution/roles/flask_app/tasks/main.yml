---
- name: load redhat variables
  include_vars: redhat.yml
  when: ansible_os_family == 'RedHat'

- name: load debian variables
  include_vars: debian.yml
  when: ansible_os_family == 'Debian'

- name: install git
  package:
    name: git
    state: present
  tags:
    - flask_app

- name: deploy application
  git:
    repo: '{{ flask_app_source }}'
    dest: /opt/flask_app
    version: '{{ flask_app_version }}'
  notify:
    - restart gunicorn
  tags:
    - flask_app

- name: install red hat packages
  yum:
    name: '{{ item }}'
    state: present
  loop:
    - python3-devel
    - python3-pip
    - MySQL-python
    - python3-gunicorn
  when: ansible_os_family == "RedHat"
  tags:
    - flask_app

- name: install debian packages
  apt:
    name: '{{ item }}'
    state: present
  loop:
    - python3-dev
    - python3-pip
    - python3-gunicorn
    - gunicorn3
  when: ansible_os_family == "Debian"
  tags:
    - flask_app

- name: install all pip packages
  pip:
    name: '{{ item }}'
    state: present
    executable: pip3
  loop:
    - flask
    - flask-mysql
    - markupsafe
  tags:
    - flask_app


- name: create version file
  template:
    src: app-version.txt.j2
    dest: /tmp/app-version.txt
    owner: root
    group: root
    mode: 0644
  tags:
    - flask_app

- name: configure the database connection
  template:
    src: dbhost.cfg.j2
    dest: /etc/dbhost.cfg
    owner: root
    group: root
    mode: 0644
  tags:
    - flask_app

- name: get gunicorn pid state
  stat:
    path: /tmp/gunicorn.pid
  register: gunicorn_pid
  tags:
    - flask_app

- name: debug gunicorn_pid
  debug:
    msg: '{{ gunicorn_pid }}'
    verbosity: 2
  tags:
    - flask_app

- name: start the application
  command: '{{ flask_gunicorn_command }}'
  when: gunicorn_pid.stat.exists != True
  tags:
    - flask_app

- name: show url
  debug:
    msg: 'http://{{ inventory_hostname }}:8000'
